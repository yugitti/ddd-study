<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>ddd-study</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ddd-study</name>
	<description>DDD Study</description>
	<properties>
		<java.version>21</java.version>
	</properties>

	開発環境と本番（デプロイ）環境で異なるデータベース設定を使用するために、Spring Bootではプロファイルを使ってapplication.propertiesファイルを環境ごとに分けることができます。これにより、異なる環境で異なる設定を容易に管理することが可能になります。

	application.propertiesの分割
	共通設定のapplication.properties:

	アプリケーションの全環境で共通の設定を保持します。
	例: spring.application.name=ddd-study
	開発環境用のapplication-dev.properties:

	開発環境特有の設定（例: ローカルのMySQL設定）を保持します。
	ファイル名はapplication-{profile}.propertiesの形式で、ここでは{profile}にdevを使用します。
	本番環境用のapplication-prod.properties:

	本番環境特有の設定（例: AWS Auroraの接続設定）を保持します。
	{profile}にはprodを使用します。
	Mavenでのビルド設定
	Mavenのビルドプロセス中に特定のプロファイルをアクティブにするために、pom.xmlにプロファイル固有の設定を追加します。以下は、開発環境と本番環境のプロファイルを設定する例です：

	xml
	Copy code

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.4.2.Final</version>
		</dependency>
		<!-- MapStructのアノテーションプロセッサを追加 -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>1.4.2.Final</version>
			<scope>provided</scope>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.h2database</groupId>-->
<!--			<artifactId>h2</artifactId>-->
<!--			<scope>runtime</scope>-->
<!--		</dependency>-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.23</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>ddd-study</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
